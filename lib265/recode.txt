============== types ==================
{   'de265_PTS': Type('int64_t'),
    'de265_decoder_context': Type('void'),
    'de265_error': Type('enum anon_enum0'),
    'enum anon_enum0': Type('enum', 'anon_enum0'),
    'enum d': Type('enum', 'd'),
    'enum de265_acceleration': Type('enum', 'de265_acceleration'),
    'enum de265_chroma': Type('enum', 'de265_chroma'),
    'enum de265_image_format': Type('enum', 'de265_image_format'),
    'enum de265_param': Type('enum', 'de265_param'),
    'struct de265_image': Type('struct', 'de265_image'),        
    'struct de265_image_allocation': Type('struct', 'de265_image_allocation'),
    'struct de265_image_spec': Type('struct', 'de265_image_spec')}
============== variables ==================
{}
============== fnmacros ==================
{}
============== macros ==================
{   'DE265_H': '',
    'LIBDE265_API': '',
    'LIBDE265_DEPRECATED': '',  
    'LIBDE265_INLINE': 'inline',
    '__STDC_LIMIT_MACROS': '1'} 
============== structs ==================
{   'de265_image': Struct(),    
    'de265_image_allocation': {   'members': [   (   'get_buffer',
                                
                     Type('int', (('ctx', Type('de265_decoder_context', '*'), None), ('spec', Type('struct de265_image_spec', '*'), None), ('img', Type('struct de265_image', '*'), None), ('userdata', Type('void', '*'), None)), '*'),
                                
                     None),     
                                
                 (   'release_buffer',
                                
                     Type('void', (('ctx', Type('de265_decoder_context', '*'), None), ('img', Type('struct de265_image', '*'), None), ('userdata', Type('void', '*'), None)), '*'),
                                
                     None)],    
                                
  'pack': None},
    'de265_image_spec': {   'members': [   ('format', Type('enum d'), None),
                                
           ('width', Type('int'), None),
                                
           ('height', Type('int'), None),
                                
           ('alignment', Type('int'), None),
                                
           ('crop_left', Type('int'), None),
                                
           ('crop_right', Type('int'), None),
                                
           ('crop_top', Type('int'), None),
                                
           ('crop_bottom', Type('int'), None),
                                
           ('visible_width', Type('int'), None),
                                
           (   'visible_height',
                                
               Type('int'),     
                                
               None)],
                            'pack': None}}
============== unions ==================
{}
============== enums ==================
{   'anon_enum0': {   'DE265_ERROR_CANNOT_PROCESS_SEI': 14,     
                      'DE265_ERROR_CANNOT_START_THREADPOOL': 10,
                      'DE265_ERROR_CHECKSUM_MISMATCH': 5,       
                      'DE265_ERROR_CODED_PARAMETER_OUT_OF_RANGE': 8,
                      'DE265_ERROR_COEFFICIENT_OUT_OF_IMAGE_BOUNDS': 4,
                      'DE265_ERROR_CTB_OUTSIDE_IMAGE_AREA': 6,  
                      'DE265_ERROR_IMAGE_BUFFER_FULL': 9,       
                      'DE265_ERROR_LIBRARY_INITIALIZATION_FAILED': 11,
                      'DE265_ERROR_LIBRARY_NOT_INITIALIZED': 12,
                      'DE265_ERROR_NOT_IMPLEMENTED_YET': 502,   
                      'DE265_ERROR_NO_INITIAL_SLICE_HEADER': 16,
                      'DE265_ERROR_NO_SUCH_FILE': 1,
                      'DE265_ERROR_OUT_OF_MEMORY': 7,
                      'DE265_ERROR_PARAMETER_PARSING': 15,      
                      'DE265_ERROR_PREMATURE_END_OF_SLICE': 17, 
                      'DE265_ERROR_UNSPECIFIED_DECODING_ERROR': 18,
                      'DE265_ERROR_WAITING_FOR_INPUT_DATA': 13, 
                      'DE265_NON_EXISTING_LT_REFERENCE_CANDIDATE_IN_SLICE_HEADER': 1023,        
                      'DE265_OK': 0,
                      'DE265_WARNING_BIT_DEPTH_OF_CURRENT_IMAGE_DOES_NOT_MATCH_SPS': 1031,      
                      'DE265_WARNING_BOTH_PREDFLAGS_ZERO': 1011,
                      'DE265_WARNING_CANNOT_APPLY_SAO_OUT_OF_MEMORY': 1024,
                      'DE265_WARNING_CHROMA_OF_CURRENT_IMAGE_DOES_NOT_MATCH_SPS': 1030,
                      'DE265_WARNING_COLLOCATED_MOTION_VECTOR_OUTSIDE_IMAGE_AREA': 1026,        
                      'DE265_WARNING_CTB_OUTSIDE_IMAGE_AREA': 1004,
                      'DE265_WARNING_DEPENDENT_SLICE_WITH_ADDRESS_ZERO': 1021,
                      'DE265_WARNING_EOSS_BIT_NOT_SET': 1017,   
                      'DE265_WARNING_FAULTY_REFERENCE_PICTURE_LIST': 1016,
                      'DE265_WARNING_INCORRECT_ENTRY_POINT_OFFSET': 1003,
                      'DE265_WARNING_INCORRECT_MOTION_VECTOR_SCALING': 1008,
                      'DE265_WARNING_INVALID_CHROMA_FORMAT': 1019,
                      'DE265_WARNING_INVALID_SLICE_HEADER_INDEX_ACCESS': 1033,
                      'DE265_WARNING_MAX_NUM_REF_PICS_EXCEEDED': 1018,
                      'DE265_WARNING_NONEXISTING_PPS_REFERENCED': 1009,
                      'DE265_WARNING_NONEXISTING_REFERENCE_PICTURE_ACCESSED': 1012,
                      'DE265_WARNING_NONEXISTING_SPS_REFERENCED': 1010,
                      'DE265_WARNING_NO_WPP_CANNOT_USE_MULTITHREADING': 1000,
                      'DE265_WARNING_NUMBER_OF_SHORT_TERM_REF_PIC_SETS_OUT_OF_RANGE': 1014,     
                      'DE265_WARNING_NUMBER_OF_THREADS_LIMITED_TO_MAXIMUM': 1022,
                      'DE265_WARNING_NUMMVP_NOT_EQUAL_TO_NUMMVQ': 1013,
                      'DE265_WARNING_PCM_BITDEPTH_TOO_LARGE': 1027,
                      'DE265_WARNING_PPS_HEADER_INVALID': 1006, 
                      'DE265_WARNING_PREMATURE_END_OF_SLICE_SEGMENT': 1002,
                      'DE265_WARNING_REFERENCE_IMAGE_BIT_DEPTH_DOES_NOT_MATCH': 1028,
                      'DE265_WARNING_REFERENCE_IMAGE_CHROMA_FORMAT_DOES_NOT_MATCH': 1032,       
                      'DE265_WARNING_REFERENCE_IMAGE_SIZE_DOES_NOT_MATCH_SPS': 1029,
                      'DE265_WARNING_SHORT_TERM_REF_PIC_SET_OUT_OF_RANGE': 1015,
                      'DE265_WARNING_SLICEHEADER_INVALID': 1007,
                      'DE265_WARNING_SLICE_SEGMENT_ADDRESS_INVALID': 1020,
                      'DE265_WARNING_SPS_HEADER_INVALID': 1005, 
                      'DE265_WARNING_SPS_MISSING_CANNOT_DECODE_SEI': 1025,
                      'DE265_WARNING_WARNING_BUFFER_FULL': 1001},
    'd': {},
    'de265_acceleration': {   'de265_acceleration_ARM': 70,     
                              'de265_acceleration_AUTO': 10000, 
                              'de265_acceleration_AVX': 50,     
                              'de265_acceleration_AVX2': 60,    
                              'de265_acceleration_MMX': 10,     
                              'de265_acceleration_NEON': 80,    
                              'de265_acceleration_SCALAR': 0,   
                              'de265_acceleration_SSE': 20,     
                              'de265_acceleration_SSE2': 30,    
                              'de265_acceleration_SSE4': 40},   
    'de265_chroma': {   'de265_chroma_420': 1,
                        'de265_chroma_422': 2,
                        'de265_chroma_444': 3,
                        'de265_chroma_mono': 0},
    'de265_image_format': {   'de265_image_format_YUV420P8': 2, 
                              'de265_image_format_YUV422P8': 3, 
                              'de265_image_format_YUV444P8': 4, 
                              'de265_image_format_mono8': 1},   
    'de265_param': {   'DE265_DECODER_PARAM_ACCELERATION_CODE': 5,
                       'DE265_DECODER_PARAM_BOOL_SEI_CHECK_HASH': 0,
                       'DE265_DECODER_PARAM_DISABLE_DEBLOCKING': 7,
                       'DE265_DECODER_PARAM_DISABLE_SAO': 8,    
                       'DE265_DECODER_PARAM_DUMP_PPS_HEADERS': 3,
                       'DE265_DECODER_PARAM_DUMP_SLICE_HEADERS': 4,
                       'DE265_DECODER_PARAM_DUMP_SPS_HEADERS': 1,
                       'DE265_DECODER_PARAM_DUMP_VPS_HEADERS': 2,
                       'DE265_DECODER_PARAM_SUPPRESS_FAULTY_PICTURES': 6}}
============== functions ==================
{   'de265_change_framerate': Type(Type('int'), ((None, Type('de265_decoder_context', '*'), None), ('more_vs_less', Type('int'), None))),
    'de265_decode': Type(Type('de265_error'), ((None, Type('de265_decoder_context', '*'), None), ('more', Type('int', '*'), None))),
    'de265_decode_data': Type(Type('de265_error'), ((None, Type('de265_decoder_context', '*'), None), ('data', Type('void', '*', type_quals=(('const',), ())), None), ('length', Type('int'), None))),
    'de265_disable_logging': Type(Type('void'), ()),
    'de265_flush_data': Type(Type('de265_error'), ((None, Type('de265_decoder_context', '*'), None),)),
    'de265_free': Type(Type('de265_error'), ((None, Type('void'), None),)),
    'de265_free_decoder': Type(Type('de265_error'), ((None, Type('de265_decoder_context', '*'), None),)),
    'de265_get_bits_per_pixel': Type(Type('int'), ((None, Type('struct de265_image', '*', type_quals=(('const',), ())), None), ('channel', Type('int'), None))),
    'de265_get_chroma_format': Type(Type('enum d'), ((None, Type('struct de265_image', '*', type_quals=(('const',), ())), None),)),
    'de265_get_current_TID': Type(Type('int'), ((None, Type('de265_decoder_context', '*'), None),)),
    'de265_get_default_image_allocation_functions': Type(Type('struct de265_image_allocation', '*', type_quals=(('const',), ())), ((None, Type('void'), None),)),
    'de265_get_error_text': Type(Type('char', '*', type_quals=(('const',), ())), (('err', Type('de265_error'), None),)),        
    'de265_get_highest_TID': Type(Type('int'), ((None, Type('de265_decoder_context', '*'), None),)),
    'de265_get_image_NAL_header': Type(Type('void'), ((None, Type('struct de265_image', '*', type_quals=(('const',), ())), None), ('nal_unit_type', Type('int', '*'), None), ('nal_unit_name', Type('char', '*', '*', type_quals=(('const',), (), ())), None), ('nuh_layer_id', Type('int', '*'), None), ('nuh_temporal_id', Type('int', '*'), None))),
    'de265_get_image_PTS': Type(Type('de265_PTS'), ((None, Type('struct de265_image', '*', type_quals=(('const',), ())), None),)),
    'de265_get_image_colour_primaries': Type(Type('int'), ((None, Type('struct de265_image', '*', type_quals=(('const',), ())), None),)),
    'de265_get_image_full_range_flag': Type(Type('int'), ((None, Type('struct de265_image', '*', type_quals=(('const',), ())), None),)),
    'de265_get_image_height': Type(Type('int'), ((None, Type('struct de265_image', '*', type_quals=(('const',), ())), None), ('channel', Type('int'), None))),  
    'de265_get_image_matrix_coefficients': Type(Type('int'), ((None, Type('struct de265_image', '*', type_quals=(('const',), ())), None),)),
    'de265_get_image_plane': Type(Type('uint8_t', '*', type_quals=(('const',), ())), ((None, Type('struct de265_image', '*', type_quals=(('const',), ())), None), ('channel', Type('int'), None), ('out_stride', Type('int', '*'), None))),
    'de265_get_image_plane_user_data': Type(Type('void', '*'), ((None, Type('struct de265_image', '*', type_quals=(('const',), ())), None), ('channel', Type('int'), None))),
    'de265_get_image_transfer_characteristics': Type(Type('int'), ((None, Type('struct de265_image', '*', type_quals=(('const',), ())), None),)),
    'de265_get_image_user_data': Type(Type('void', '*'), ((None, Type('struct de265_image', '*', type_quals=(('const',), ())), None),)),
    'de265_get_image_width': Type(Type('int'), ((None, Type('struct de265_image', '*', type_quals=(('const',), ())), None), ('channel', Type('int'), None))),   
    'de265_get_next_picture': Type(Type('struct de265_image', '*', type_quals=(('const',), ())), ((None, Type('de265_decoder_context', '*'), None),)),
    'de265_get_number_of_NAL_units_pending': Type(Type('int'), ((None, Type('de265_decoder_context', '*'), None),)),
    'de265_get_number_of_input_bytes_pending': Type(Type('int'), ((None, Type('de265_decoder_context', '*'), None),)),
    'de265_get_parameter_bool': Type(Type('int'), ((None, Type('de265_decoder_context', '*'), None), ('param', Type('enum d'), None))),
    'de265_get_version': Type(Type('char', '*', type_quals=(('const',), ())), ((None, Type('void'), None),)),
    'de265_get_version_number': Type(Type('uint32_t'), ((None, Type('void'), None),)),
    'de265_get_version_number_maintenance': Type(Type('int'), ((None, Type('void'), None),)),   
    'de265_get_version_number_major': Type(Type('int'), ((None, Type('void'), None),)),
    'de265_get_version_number_minor': Type(Type('int'), ((None, Type('void'), None),)),
    'de265_get_warning': Type(Type('de265_error'), ((None, Type('de265_decoder_context', '*'), None),)),
    'de265_init': Type(Type('de265_error'), ((None, Type('void'), None),)),
    'de265_isOK': Type(Type('int'), (('err', Type('de265_error'), None),)),
    'de265_new_decoder': Type(Type('de265_decoder_context', '*'), ((None, Type('void'), None),)),
    'de265_peek_next_picture': Type(Type('struct de265_image', '*', type_quals=(('const',), ())), ((None, Type('de265_decoder_context', '*'), None),)),
    'de265_push_NAL': Type(Type('de265_error'), ((None, Type('de265_decoder_context', '*'), None), ('data', Type('void', '*', type_quals=(('const',), ())), None), ('length', Type('int'), None), ('pts', Type('de265_PTS'), None), ('user_data', Type('void', '*'), None))),
    'de265_push_data': Type(Type('de265_error'), ((None, Type('de265_decoder_context', '*'), None), ('data', Type('void', '*', type_quals=(('const',), ())), None), ('length', Type('int'), None), ('pts', Type('de265_PTS'), None), ('user_data', Type('void', '*'), None))),
    'de265_push_end_of_NAL': Type(Type('void'), ((None, Type('de265_decoder_context', '*'), None),)),
    'de265_push_end_of_frame': Type(Type('void'), ((None, Type('de265_decoder_context', '*'), None),)),
    'de265_release_next_picture': Type(Type('void'), ((None, Type('de265_decoder_context', '*'), None),)),
    'de265_reset': Type(Type('void'), ((None, Type('de265_decoder_context', '*'), None),)),     
    'de265_set_framerate_ratio': Type(Type('void'), ((None, Type('de265_decoder_context', '*'), None), ('percent', Type('int'), None))),
    'de265_set_image_allocation_functions': Type(Type('void'), ((None, Type('de265_decoder_context', '*'), None), (None, Type('struct de265_image_allocation', '*'), None), ('userdata', Type('void', '*'), None))),
    'de265_set_image_plane': Type(Type('void'), (('img', Type('struct de265_image', '*'), None), ('cIdx', Type('int'), None), ('mem', Type('void', '*'), None), ('stride', Type('int'), None), ('userdata', Type('void', '*'), None))),
    'de265_set_image_user_data': Type(Type('void'), ((None, Type('struct de265_image', '*'), None), ('user_data', Type('void', '*'), None))),
    'de265_set_limit_TID': Type(Type('void'), ((None, Type('de265_decoder_context', '*'), None), ('max_tid', Type('int'), None))),
    'de265_set_parameter_bool': Type(Type('void'), ((None, Type('de265_decoder_context', '*'), None), ('param', Type('enum d'), None), ('value', Type('int'), None))),
    'de265_set_parameter_int': Type(Type('void'), ((None, Type('de265_decoder_context', '*'), None), ('param', Type('enum d'), None), ('value', Type('int'), None))),
    'de265_set_verbosity': Type(Type('void'), (('level', Type('int'), None),)),
    'de265_start_worker_threads': Type(Type('de265_error'), ((None, Type('de265_decoder_context', '*'), None), ('number_of_threads', Type('int'), None)))}      
============== values ==================
{   'DE265_DECODER_PARAM_ACCELERATION_CODE': 5,
    'DE265_DECODER_PARAM_BOOL_SEI_CHECK_HASH': 0,
    'DE265_DECODER_PARAM_DISABLE_DEBLOCKING': 7,
    'DE265_DECODER_PARAM_DISABLE_SAO': 8,
    'DE265_DECODER_PARAM_DUMP_PPS_HEADERS': 3,
    'DE265_DECODER_PARAM_DUMP_SLICE_HEADERS': 4,
    'DE265_DECODER_PARAM_DUMP_SPS_HEADERS': 1,
    'DE265_DECODER_PARAM_DUMP_VPS_HEADERS': 2,
    'DE265_DECODER_PARAM_SUPPRESS_FAULTY_PICTURES': 6,
    'DE265_ERROR_CANNOT_PROCESS_SEI': 14,
    'DE265_ERROR_CANNOT_START_THREADPOOL': 10,
    'DE265_ERROR_CHECKSUM_MISMATCH': 5,
    'DE265_ERROR_CODED_PARAMETER_OUT_OF_RANGE': 8,
    'DE265_ERROR_COEFFICIENT_OUT_OF_IMAGE_BOUNDS': 4,
    'DE265_ERROR_CTB_OUTSIDE_IMAGE_AREA': 6,
    'DE265_ERROR_IMAGE_BUFFER_FULL': 9,
    'DE265_ERROR_LIBRARY_INITIALIZATION_FAILED': 11,
    'DE265_ERROR_LIBRARY_NOT_INITIALIZED': 12,
    'DE265_ERROR_NOT_IMPLEMENTED_YET': 502,
    'DE265_ERROR_NO_INITIAL_SLICE_HEADER': 16,
    'DE265_ERROR_NO_SUCH_FILE': 1,
    'DE265_ERROR_OUT_OF_MEMORY': 7,
    'DE265_ERROR_PARAMETER_PARSING': 15,
    'DE265_ERROR_PREMATURE_END_OF_SLICE': 17,
    'DE265_ERROR_UNSPECIFIED_DECODING_ERROR': 18,
    'DE265_ERROR_WAITING_FOR_INPUT_DATA': 13,
    'DE265_H': None,
    'DE265_NON_EXISTING_LT_REFERENCE_CANDIDATE_IN_SLICE_HEADER': 1023,
    'DE265_OK': 0,
    'DE265_WARNING_BIT_DEPTH_OF_CURRENT_IMAGE_DOES_NOT_MATCH_SPS': 1031,
    'DE265_WARNING_BOTH_PREDFLAGS_ZERO': 1011,
    'DE265_WARNING_CANNOT_APPLY_SAO_OUT_OF_MEMORY': 1024,       
    'DE265_WARNING_CHROMA_OF_CURRENT_IMAGE_DOES_NOT_MATCH_SPS': 1030,
    'DE265_WARNING_COLLOCATED_MOTION_VECTOR_OUTSIDE_IMAGE_AREA': 1026,
    'DE265_WARNING_CTB_OUTSIDE_IMAGE_AREA': 1004,
    'DE265_WARNING_DEPENDENT_SLICE_WITH_ADDRESS_ZERO': 1021,    
    'DE265_WARNING_EOSS_BIT_NOT_SET': 1017,
    'DE265_WARNING_FAULTY_REFERENCE_PICTURE_LIST': 1016,        
    'DE265_WARNING_INCORRECT_ENTRY_POINT_OFFSET': 1003,
    'DE265_WARNING_INCORRECT_MOTION_VECTOR_SCALING': 1008,      
    'DE265_WARNING_INVALID_CHROMA_FORMAT': 1019,
    'DE265_WARNING_INVALID_SLICE_HEADER_INDEX_ACCESS': 1033,    
    'DE265_WARNING_MAX_NUM_REF_PICS_EXCEEDED': 1018,
    'DE265_WARNING_NONEXISTING_PPS_REFERENCED': 1009,
    'DE265_WARNING_NONEXISTING_REFERENCE_PICTURE_ACCESSED': 1012,
    'DE265_WARNING_NONEXISTING_SPS_REFERENCED': 1010,
    'DE265_WARNING_NO_WPP_CANNOT_USE_MULTITHREADING': 1000,     
    'DE265_WARNING_NUMBER_OF_SHORT_TERM_REF_PIC_SETS_OUT_OF_RANGE': 1014,
    'DE265_WARNING_NUMBER_OF_THREADS_LIMITED_TO_MAXIMUM': 1022, 
    'DE265_WARNING_NUMMVP_NOT_EQUAL_TO_NUMMVQ': 1013,
    'DE265_WARNING_PCM_BITDEPTH_TOO_LARGE': 1027,
    'DE265_WARNING_PPS_HEADER_INVALID': 1006,
    'DE265_WARNING_PREMATURE_END_OF_SLICE_SEGMENT': 1002,       
    'DE265_WARNING_REFERENCE_IMAGE_BIT_DEPTH_DOES_NOT_MATCH': 1028,
    'DE265_WARNING_REFERENCE_IMAGE_CHROMA_FORMAT_DOES_NOT_MATCH': 1032,
    'DE265_WARNING_REFERENCE_IMAGE_SIZE_DOES_NOT_MATCH_SPS': 1029,
    'DE265_WARNING_SHORT_TERM_REF_PIC_SET_OUT_OF_RANGE': 1015,  
    'DE265_WARNING_SLICEHEADER_INVALID': 1007,
    'DE265_WARNING_SLICE_SEGMENT_ADDRESS_INVALID': 1020,        
    'DE265_WARNING_SPS_HEADER_INVALID': 1005,
    'DE265_WARNING_SPS_MISSING_CANNOT_DECODE_SEI': 1025,        
    'DE265_WARNING_WARNING_BUFFER_FULL': 1001,
    'LIBDE265_API': None,       
    'LIBDE265_DEPRECATED': None,
    'LIBDE265_INLINE': None,    
    '__STDC_LIMIT_MACROS': 1,   
    'de265_acceleration_ARM': 70,
    'de265_acceleration_AUTO': 10000,
    'de265_acceleration_AVX': 50,
    'de265_acceleration_AVX2': 60,
    'de265_acceleration_MMX': 10,
    'de265_acceleration_NEON': 80,
    'de265_acceleration_SCALAR': 0,
    'de265_acceleration_SSE': 20,
    'de265_acceleration_SSE2': 30,
    'de265_acceleration_SSE4': 40,
    'de265_chroma_420': 1,      
    'de265_chroma_422': 2,      
    'de265_chroma_444': 3,      
    'de265_chroma_mono': 0,     
    'de265_image_format_YUV420P8': 2,
    'de265_image_format_YUV422P8': 3,
    'de265_image_format_YUV444P8': 4,
    'de265_image_format_mono8': 1}
